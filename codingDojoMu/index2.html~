<!doctype html>
<meta charset="utf-8">
<title>Tooling - jQuery UK</title>
<link href='http://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Crimson+Text:regular,600,bold' rel='stylesheet' type='text/css'>
<link rel="stylesheet" href="css/reset.css">
<link rel="stylesheet" href="css/main.css">
<link rel="stylesheet" href="lib/zenburn.css">

<base target="_blank">

<div id="reveal">

<!-- Any section element inside of this container is displayed as a slide -->


<div class=slides>

<section>
    <h1>Webapp Development Stack & Tooling</h1>

    <h3 class="inverted">Productivity++ &amp;&amp; Stress-- <br>
        with a robust front-end toolchain</h3>

     <h4>jQuery UK, Feb 10th</h4>
    <h4>Paul Irish. </h4>


    <p>You can navigate with <span class="key">→</span> and <span class="key">↓</span>.
     <p> <small>Also <span class=key>space</span> gives an exposé mode that might break your browser.</small>


</section>

<section>
    <h2>The goal</h2>

    <p>
        We want rich web apps, that act responsively and present compelling experiences.
    </p>
</section>

<section>
    <h2>The problem</h2>

    <p>
        Development takes time. Lots of time focused on common tasks rather than building unique experiences.
    </p>
</section>


<!--
<section>
    <section>
        <h1>Let's talk to some developers!</h1>

    </section>

    <section>
        <blockquote>
            Starting from a blank page is imtimidating.
        </blockquote>
    </section>
    <section>
        <blockquote>
            We didn't start with tools
        </blockquote>
    </section>
    <section>
        <blockquote>
            Most of us haven't realized how innefficient we are. We can <strong>want more</strong>.
        </blockquote>
    </section>
    <section>
        <blockquote>
            Nowadays I go out of my way to learn one thing a day.
        </blockquote>
    </section>

    <section>
        <blockquote>
            Some developers are
          <a href="http://en.wikipedia.org/wiki/Integrated_Development_Environment#Attitudes_across_different_computing_platforms">
            scared of the command line</a>. The cost of getting into a new tool seems
          too high.
            Dependencies are scary.
        </blockquote>
    </section>
    <section>
        <blockquote>
            There are too many frameworks. The ramp up to them is too great; it slows you down.
        </blockquote>
    </section>
    <section>
        <blockquote>
            To me this whole thing just feels like it needs bundling up properly with a brick ton of documentation and
            industry leaders saying "this is GOOD"
        </blockquote>
    </section>


</section>
omg end of group -->



<section>
    <h2 style="text-transform:initial">No developer wants to be spinning their wheels, or operating on mundane tasks
        when they could instead be creating rich and compelling experiences.
    </h2>
<br>
    <h2 style="text-transform:initial">Smart developers work with smart tools, effective workflows, and wise strategies
        for development.
    </h2>
</section>



<section>
  <section>
    <h1>History of Frontend Tooling</h1>
  </section>

  <section>
    <h2>It starts with HTML5...</h2>
    <ul>
      <li class=fragment><a href="http://ln.hixie.ch/?start=1037910467&count=1">In 2001</a>, Hixie is testing HTML parsing..
      <li class=fragment><a href="http://ln.hixie.ch/?start=1137740632&count=1">In 2006 that continues..</a> but now...
        <q>I <a href="http://software.hixie.ch/utilities/js/live-dom-viewer/">wrote a tool</a></q>

      <li class=fragment>What started as interop research led to the <a href="http://joehewitt.com/2006/03/26/firebug-03-preview">best tooling for web developers</a>..

    </ul>
  </section>
</section> <!-- eo history group -->




<section>
  <section>
    <h1>What is Frontend Tooling?</h1>
  </section>

  <section>
    <q>A programming tool or software development tool is a program or application that software developers use to create, debug, maintain, or otherwise support other programs and applications.</q>
    <br><br>
    <q><strong>Optional</strong> software that assists in development of webapps.</q>
  </section>

  <section>
    <a href="http://mothereffingtextshadow.com/" class=image>
      <img src="http://www.metaltoad.com/sites/default/files/mfts.png">
    </a>
  </section>

  <section>
    <a href="http://sassymothereffingtextshadow.com/"  class=image>
      <img src="http://paulirish.com/i/db5290.png">
    </a>
  </section>

</section> <!-- eo what is? group -->




<section>
  <section>
    <h1>The Ecosystem</h1>
  </section>


  <section>
    <a target="_blank" href="https://plus.google.com/113127438179392830442/posts/hbjf8AiuCpt" class=image>
      <img
            src="http://paulirish.com/i/3d96a0.png" height=600></a>
  </section>



  <section tagcloud>
    sass
    compass
    less
    stylus
    markdown
    haml
    jade
    coffeescript
    Ant
    make
    rake
    cake
    bash
    Image compression tools
    Minification & concat tooling
    JSHint
    JSLint
    codekit
    livereload
    web-build
    handlebars
    mustache
    zen coding
    selenium
    browserstack
    mogotest

    require
    sprockets
    jQuery Mobile
    Sencha
    jQuery UI
    Sproutcore
    Selenium
    Jenkins
    QUnit
    Jasmine
    jstestdriver
  </section>
<!--
  <section>
    <a href="http://clausreinke.github.com/js-tools/resources.html" class="image">
      <img src="http://paulirish.com/i/0adbc0.png">
    </a>
  </section>
-->
</section> <!-- eo ecosystem group -->



<!-- LIFECYCLE -->
<!-- LIFECYCLE -->
<!-- LIFECYCLE -->
<!-- LIFECYCLE -->
<section>
  <section>
    <h1>The Webapp Lifecycle</h1>
    <h2>Tooling contextualized</h2>
  </section>

  <section>
    <img src=timeline.png>
  </section>
</section> <!-- eo lifecycle group -->



<section>
  <section>
    <h3>The Webapp Lifecycle:</h3>
    <h1>Boilerplate</h1>
  </section>

  <section>
    <h3>Various Boilerplates...</h3>
    <div class="container"><div class="carousel">
      <a href="http://html5boilerplate.com/" screenshot></a>
      <a href="http://blueprintcss.org/" screenshot></a>
      <a href="http://htmlemailboilerplate.com/" screenshot></a>
      <a href="http://html5boilerplate.com/mobile" screenshot></a>
      <a href="https://github.com/csnover/dojo-boilerplate" screenshot></a>

<a href="http://jqueryboilerplate.com/" screenshot></a>

 <!--
      <a href="https://github.com/kirbysayshi/sickofit" screenshot></a>
-->
    </div></div>
  </section>
</section> <!-- eo lifecycle/boilerplate group -->



<section>
  <section>
    <h3>The Webapp Lifecycle:</h3>
    <h1>Authoring Abstractions</h1>
  </section>

  <section>

    <h3>Styling</h3>
    <!-- HTML, CSS, and JavaScript can't evolve quickly enough to ease developer ergonomics
    (and certainly our browser landscape doesn't update quick enough) so abstractions that improve these core languages have stepped in.
 -->
    <!--
    * Sass, and its companion Compass, probably have the
If you haven't put them to use yet, you've probably heard again and again from others
that you should. It means dealing with the command line, which might be a new part of
 your workflow, but everyone I know that has gone Sass hasn't gone back. A brief but
 powerful introduction is this deck:
 [Sass and Compass: The Future of Stylesheets Now](http://speakerdeck.com/u/imathis/p/sass-compass-the-future-of-stylesheets-now );
  * One of my favorite aspects of Sass is being able to transition an existing
  stylesheet over to it. The default dialect is SCSS, which is a superset of
  the CSS syntax which means we can run our current styles through it and just
   [refactor to more logical styles as we go](http://mattbilson.com/blog/2011/12/refactoring-with-sass-and-compass-the-css-of-your-dreams/).

-->
    <div class="container"><div class="carousel">

    <A href="http://sass-lang.com/" screenshot></A>
    <A href="http://compass-style.org/" screenshot></A>
    <a href="http://lesscss.org/" screenshot ></a>
    <a href="http://code.google.com/p/closure-stylesheets/" screenshot></a>
      <a href="http://learnboost.github.com/stylus/" screenshot></a>
  <!--    <a href="http://visionmedia.github.com/nib/" screenshot></a>  -->

    </div></div>
      <!--
          * [Stylus](http://learnboost.github.com/stylus/) is the latest entrant. It was designed from a frustration
           of the power of Sass and Less, so it's [pretty next-level](http://vimeo.com/33462524).
           [Nib](http://visionmedia.github.com/nib/) is its CSS3 companion library.
      -->
<!--
    * Less.js started in Ruby but made the switch over to JS, an attractive
    option if you've got a NodeJS stack already. While it is written in JavaScript,
     it's a poor choice to use client-side in production; the performance cost on mobile is significant.
    * [Google Closure Stylesheets]() was announced recently, but for the most
     part, it was an open-sourcing of a tool [internally developed
    long before](https://groups.google.com/d/msg/closure-stylesheets-discuss/mcWD3oCofl8/NoOaqcsdAhMJ)
    these two projects. (Mozilla also made one they use for Firefox's UI)

    minification (incl vendor specific), linting, RTL flipping, and CSS class renaming.

-->
  </section>


  <section>
    <h3>Markup</h3>

    <div class="container"><div class="carousel">

    <a href="http://haml-lang.com/" screenshot></a>
    <a href="http://daringfireball.net/projects/markdown/" screenshot>
      <!-- <span href="http://octopress.org/">Octopress</span> -->
    </a>

    <a href="http://jade-lang.com/" screenshot demo></a>
    <a href="http://handlebarsjs.com/" screenshot></a>
    <a href="http://code.google.com/p/zen-coding/" screenshot demo></a>


    </div></div>



    <!--



Matching your angle brackets visually in your text editor gets tiring sometimes.
 Markup has been abtracted a number of times, sometimes for easier user contributions
 (BBCode, Textile) or imperitively as in Zen Coding. They all have different uses,
  sometimes for scaffolding a markup structure you'll fill in later, managing through
   a template, or authoring the primary content in perpituity.


* [Haml](http://haml-lang.com/) was crafted by the same gent who created [Sass](http://sass-lang.com/),
       Googler Nathan Weizenbaum. Haml takes the class and ID syntax and blends it with a indent
       specific structure to scaffold your HTML. However, don't be tempted to write your content
        with HAML; in fact, [HAML sucks for content](http://chriseppstein.github.com/blog/2010/02/08/haml-sucks-for-content/)
         -- for that, we'll use something different.
   * Markdown is what this article was drafted in and has become many developers' default markup
   abtraction for writing prose. It works very well for body content. Tooling for writing it has
   improved as well; certainly there are many CLI compilers like [maraku](https://github.com/nex3/maruku)
   and [kramdown](https://github.com/gettalong/kramdown) which extend the core language, but editors
   like [Mou.app](http://mouapp.com/) and the web-based [Dillinger](http://dillinger.io/) make authoring content a dream.
   * [Jade](http://jade-lang.com/), from the creator of Stylus, took a lot of inspiration from HAML,
   and works great in a NodeJS stack. It also offers a [debug view](http://www.screenr.com/vV0), which
    is invaluable when your template is misbehaving.
   * [Handlebars](http://handlebarsjs.com/) is likely the speediest and most extensible templating
   engine around and plugs in very nicely when you're matching JSON data up against markup.
   * [Zen Coding](http://code.google.com/p/zen-coding/) differs from the above as it is an imperative
    HTML scaffolding tool or "abbreviation engine". If you're working in a team and can't migrate to
    one of the above abtractions, you'll enjoy typing `div#content>h2+p` hitting <kbd>Ctrl ,</kdb>
    and getting `<div id="content"><h2></h2><p></p></div>` (properly formatted) expanded in your editor.
    -->
  </section>

  <section>
    <h3>Scripting</h3>
    <div class="container"><div class="carousel">

      <a href="https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS" screenshot></a>
      <a href="http://coffeescript.org/" screenshot></a>
      <a href="http://www.dartlang.org/" screenshot></a>


    </div></div>
  </section>
</section> <!-- eo lifecycle/authoring group -->


<!--


#### Simpler Script

Just like jQuery improved the DOM, ECMAScript the language is ripe for improvements. [Coffeescript](http://coffeescript.org/) is the clear innovator here, and was designed to save time typing but also maintain the same readability of JavaScript. So essentially it's killing off superfluous and redundant syntax so can more clearly look at the semantics of the code itself.
http://bolinfest.com/coffee/

-->


<section>
  <section>
    <h3>The Webapp Lifecycle:</h3>
    <h1>Frameworks, Clientside Stack, Application Architecture</h1>
  </section>

  <section>
    <h3>Looking back a few years...</h3>

    <ul>
      <li class="fragment">jQuery vs Dojo</li>
      <li class="fragment">Topic: "Rolling Your Own"</li>
      <li class="fragment">yayQuery Battle Royale:
        <a href="http://alexsexton.com/?p=106">Alex Sexton</a> <!-- http://jquerysbestfriends.com/ -->
           vs
        <a href="http://blog.rebeccamurphey.com/on-rolling-your-own">Rebecca Murphey</a>
      <li class="fragment"><a href="http://addyosmani.com/resources/toolschart/chart.pdf">jQuery App Architecture</a>
      vs
      <a href="http://zetafleet.com/i/4d75a4efc33d4.png">Dojo App Architecture</a>

    </ul>
  </section>
  <section>

    <a href="http://addyosmani.github.com/todomvc/" screenshot="800x800"></a>

    <!--
    http://speakerdeck.com/u/addyosmani/p/large-scale-javascript-application-architecture patterns
    dojo toolchain http://zetafleet.com/i/4f06084daf359.jpg http://zetafleet.com/i/4f0608306f026.jpg
    http://addyosmani.com/toolsforjqueryapparchitecture/ tools
     show potential stacks

    -->
  </section>

  <section>
    <h1> your tools need to support your stack</h1>
  </section>
</section> <!-- eo lifecycle/frameworks group -->


<!--

* app arch
  * module pattern. AMD modules.
  * dependency mgmt
  * app frameworks
      jQuery Mobile
      Sencha
      jQuery UI
      Sproutcore

  -->

<section>
  <section>
    <h3>The Webapp Lifecycle:</h3>
    <h1>Iteration Workflow</h1>
  </section>


  <section>
    <h3>Basics</h3>
    <pre><code>
# usage:
# $ chrome index.html
function chrome() {
    open $@ --args --allow-file-access-from-files
}

# usage:
# $ server
alias server='open http://localhost:8000 && python -m SimpleHTTPServer'

    </code></pre>
  </section>

  <section>
    <h3>Iteration Automators</h3>

    <div class="container"><div class="carousel">

    <img src="http://paulirish.com/i/4005a0.png" demo>
    <a href="http://livereload.com/" screenshot demo></a>
      <a href="http://incident57.com/codekit/" screenshot></a>
      <a href="http://addyosmani.com/blog/autosave-changes-chrome-dev-tools/" screenshot demo></a>


    </div></div>

  </section>

  <section>
    <h3>Editors and IDEs</h3>

    <div class="container"><div class="carousel">


    <a href="http://net.tutsplus.com/tutorials/tools-and-tips/sublime-text-2-tips-and-tricks/" screenshot></a>
    <a href="http://net.tutsplus.com/tutorials/tools-and-tips/essential-textmate-shortcuts-tips-and-techniques/" screenshot></a>
    <a href="http://aptana.com/products/studio3" screenshot></a>
    <a href="http://www.jetbrains.com/webstorm/features/" screenshot></a>

    </div></div>
    <!--   it's got built-in support for Coffeescript, JSHint, jQuery, YUI, JSTestDriver, Zen Coding and plenty more. -->
    <!-- github integration,, completion,  debugging, hunting leaks -->
  </section>


  <section>
    <h3>Browser Dev Tools</h3>
    <div class="container"><div class="carousel">

        <a href="http://code.google.com/chrome/devtools/" screenshot demo></a>
<!--
        <a href="http://benvanik.github.com/WebGL-Inspector/" screenshot></a>
        <a href="http://phonegap.github.com/weinre/" screenshot></a>
        <a href="http://www.iwebinspector.com/" screenshot></a>
        -->
        <a href="http://code.google.com/chrome/mobile/docs/debugging.html" demo screenshot></a>

    </div></div>

  </section>

  <section>
    <h3>Linting</h3>
    <div class="container"><div class="carousel">

    <a href="http://www.jshint.com/" screenshot></a>
    <a href="http://code.google.com/closure/utilities/" screenshot></a>
    <a href="http://code.google.com/p/closure-stylesheets/" screenshot></a>

    </div></div>
  </section>

  <section>
    <h3>Testing</h3>
    <h4>visual, css regression, js unit, js integration</h4>

    <div class="container"><div class="carousel">
    <a href="http://www.browserstack.com/" screenshot></a>
    <a href="http://mogotest.com/" screenshot></a>
    <a href="http://docs.jquery.com/QUnit" screenshot></a>
    <a href="http://pivotal.github.com/jasmine/" screenshot></a>
    <a href="http://code.google.com/p/js-test-driver/" screenshot></a>
    <a href="http://testling.com/" screenshot></a>
    <a href="http://seleniumhq.org/projects/" screenshot></a>
    <a href="http://watirwebdriver.com/" screenshot></a>


    </div></div>
  </section>

  <section>
    <h3>Linting / Testing in context</h3>
    <a href="https://plus.google.com/113127438179392830442/posts/Z1LpEhfKTqo" class=image>
      <img src="http://paulirish.com/i/e2ce50.png">
    </a>
  </section>


</section> <!-- eo lifecycle/iteration group -->

<!--
<section>
  <section>
    <h3>The Webapp Lifecycle:</h3>
    <h1>Performance Tuning</h1>
  </section>

  <section tagcloud>
    FPS Counter
    Composited render layer borders
    <code style="white-space: nowrap;">--show-paint-rects</code>
    Timeline View
    OS X Instruments app
    about:tracing
    about:gpu
  </section>

  <section>
    <h3>CPU and Memory Profiling</h3>

    <div class="container"><div class="carousel">
      <a href="http://code.google.com/chrome/devtools/docs/cpu-profiling.html" screenshot></a>
      <a href="http://gent.ilcore.com/2011/08/finding-memory-leaks.html" screenshot></a>
      <a href="http://code.google.com/chrome/devtools/docs/heap-profiling.html" screenshot></a>

    </div></div>
  </section>

</section> eo lifecycle/perf group -->



<section>
  <section>
    <h3>The Webapp Lifecycle:</h3>
    <h1>Build + Optimization</h1>
  </section>

  <section >
    <h3>So many best practices...</h3>
    <p tagcloud>
combine and minify css and js
inline @imports
inline small images as data-uri
remove console.log
remove unused CSS
cache manifest creation
asset revving
dead code elimination
image compression
video/audio transcoding
    </p>
  </section>

  <section>
    <h3>Tools do the work for us</h3>

    <div class="container"><div class="carousel">

    <a href="http://code.google.com/closure/compiler/" screenshot></a>
    <a href="http://developer.yahoo.com/yui/compressor/" screenshot></a>
    <a href="http://code.google.com/p/htmlcompressor/" screenshot></a>
    <a href="http://www.codedread.com/scour/" screenshot></a>


    <a href="http://imageoptim.pornel.net/" screenshot></a>
    <a href="http://optipng.sourceforge.net/" screenshot></a>
    <a href="http://trimage.org/" screenshot></a>

    <a href="http://pngquant.org/" screenshot></a>
    <a href="https://github.com/rflynn/imgmin" screenshot></a>

    </div></div>

  </section>

  <section>
    <h3>Automating the automators</h3>
    <ul>
      <li>Ant / Make / Rake / Jake / Cake
      <li>Bash / Python
      <li>
      <a href="http://html5boilerplate.com/docs/Build-script/">H5BP build script</a> (now in Ant, Node, and Rake)
        <li>
          <a href="https://github.com/tivac/web-build">web-build</a>

            <li>
          <a href="https://github.com/balupton/buildr.npm">buildr</a>
            ,
          <a href="https://github.com/cowboy/grunt">grunt</a>
    </ul>
  </section>
  <section>
    <h2>... and Deployment</h2>

    <ul>
      <li>Jenkins and Travis for CI</li>
      <li>VCS Hooks</li>
      <li>mod_pagespeed</li>
    </ul>

    <br><br>

    <blockquote>
      Deployment is an art. And the style in which you deploy impacts your company culture more than you think. <a href="http://warpspire.com/posts/ops-art/">Deploy with style</a>
    </blockquote>
  </section>
</section> <!-- eo lifecycle/build group -->



<!-- end of LIFECYCLE -->
<!-- end of LIFECYCLE -->
<!-- end of LIFECYCLE -->
<!-- end of LIFECYCLE -->
<!-- end of LIFECYCLE -->

<!--
<section>
  <h1>Tooling Antipatterns</h1>
  <ul>
    <li class=fragment><a href="http://css3please.com/">web-based tools</a> that require >1 visit/project
    <li class=fragment><a href="http://pngmini.com/">GUIs</a>?
  </ul>
</section>

-->


<section>
  <section>
    <h1>In conclusion...</h1>
  </section>
  <section>
    <h4>Web development is a bumpy road.</h4>
    <img src="http://peddlerofdreams.files.wordpress.com/2008/10/tarkeshwar-mahadev-temple_bumpy-road21.jpg" width=800>

  </section>
  <section>
    <h2>These tools give your development vehicle neccessary suspension. </h2>
    <h2>and more fun.</h2>

  </section>
</section>

<section>
    <h1>♥⏝♥</h1>

    <h3 class="inverted">thank you.</h3>
</section>

</div>

<!-- The navigational controls UI -->
<aside class="controls">
    <a class="left" href="#">&#x25C4;</a>
    <a class="right" href="#">&#x25BA;</a>
    <a class="up" href="#">&#x25B2;</a>
    <a class="down" href="#">&#x25BC;</a>



</aside>









<!-- Displays presentation progress, max value changes via JS to reflect # of slides -->
<div class="progress"><span></span></div>

</div>

<script src="js/reveal.js"></script>
<script src="lib/highlight.js"></script>

<script>
    // Parse the query string into a key/value object
    var query = {};


    Reveal.initialize({
        // Display controls in the bottom right corner
        controls:true,

        // Display a presentation progress bar
        progress:true,

        // If true; each slide will be pushed to the browser history
        history:true,

        // Apply a 3D roll to links on hover
        rollingLinks:true,

        // UI style
        theme:query.theme || 'default', // default/neon

        // Transition style
        transition:query.transition || 'default' // default/cube/page/concave/linear(2d)
    });

    hljs.initHighlightingOnLoad();
</script>

<script src="lib/md5.js"></script>

<script src="js/setup.js"></script>

<link rel="stylesheet" href="lib/carousel.css">
<script src="lib/carousel.js"></script>
